// ================================================================================
// Code generated and maintained by GoFrame CLI tool. DO NOT EDIT.
// ================================================================================

package boot

import (
	"github.com/gogf/gf/v2/util/gtag"
)

func init() {
	gtag.SetGlobalEnums(`{"github.com/fatih/color.Attribute":[40,44,46,42,100,104,106,102,105,101,107,103,45,41,47,43,6,5,1,8,9,2,30,34,36,32,90,94,96,92,95,91,97,93,35,31,37,33,3,0,7,4],"github.com/fsnotify/fsnotify.Op":[16,1,4,8,2],"github.com/go-logr/logr/funcr.MessageClass":[1,3,2,0],"github.com/go-logr/stdr.MessageClass":[1,3,2,0],"github.com/gogf/gf/v2/database/gdb.InsertOption":[0,3,1,2],"github.com/gogf/gf/v2/database/gredis.FlushOp":["ASYNC","SYNC"],"github.com/gogf/gf/v2/database/gredis.LInsertOp":["AFTER","BEFORE"],"github.com/gogf/gf/v2/encoding/gjson.ContentType":["ini","js","json","properties","toml","xml","yaml","yml"],"github.com/gogf/gf/v2/net/ghttp.HandlerType":["handler","hook","middleware","object"],"github.com/gogf/gf/v2/net/ghttp.HookName":["HOOK_AFTER_OUTPUT","HOOK_AFTER_SERVE","HOOK_BEFORE_OUTPUT","HOOK_BEFORE_SERVE"],"github.com/gogf/gf/v2/os/gctx.StrKey":["CtxKeyArguments","CtxKeyCommand","CtxKeyParser"],"github.com/gogf/gf/v2/os/gfsnotify.Op":[16,1,4,8,2],"github.com/gogf/gf/v2/os/gstructs.RecursiveOption":[1,2,0],"github.com/grokify/html-strip-tags-go.ErrorCode":[1,2,3,4,5,6,7,8,9,10,0],"github.com/magiconair/properties.Encoding":[2,1],"go.opentelemetry.io/otel/attribute.Key":["aws.dynamodb.attribute_definitions","aws.dynamodb.attributes_to_get","aws.dynamodb.consistent_read","aws.dynamodb.consumed_capacity","aws.dynamodb.count","aws.dynamodb.exclusive_start_table","aws.dynamodb.global_secondary_index_updates","aws.dynamodb.global_secondary_indexes","aws.dynamodb.index_name","aws.dynamodb.item_collection_metrics","aws.dynamodb.limit","aws.dynamodb.local_secondary_indexes","aws.dynamodb.projection","aws.dynamodb.provisioned_read_capacity","aws.dynamodb.provisioned_write_capacity","aws.dynamodb.scan_forward","aws.dynamodb.scanned_count","aws.dynamodb.segment","aws.dynamodb.select","aws.dynamodb.table_count","aws.dynamodb.table_names","aws.dynamodb.total_segments","aws.ecs.cluster.arn","aws.ecs.container.arn","aws.ecs.launchtype","aws.ecs.task.arn","aws.ecs.task.family","aws.ecs.task.revision","aws.eks.cluster.arn","aws.lambda.invoked_arn","aws.log.group.arns","aws.log.group.names","aws.log.stream.arns","aws.log.stream.names","browser.brands","browser.language","browser.mobile","browser.platform","browser.user_agent","cloud.account.id","cloud.availability_zone","cloud.platform","cloud.provider","cloud.region","cloudevents.event_id","cloudevents.event_source","cloudevents.event_spec_version","cloudevents.event_subject","cloudevents.event_type","code.column","code.filepath","code.function","code.lineno","code.namespace","container.id","container.image.name","container.image.tag","container.name","container.runtime","db.cassandra.consistency_level","db.cassandra.coordinator.dc","db.cassandra.coordinator.id","db.cassandra.idempotence","db.cassandra.page_size","db.cassandra.speculative_execution_count","db.cassandra.table","db.connection_string","db.jdbc.driver_classname","db.mssql.instance_name","db.mongodb.collection","db.name","db.operation","db.redis.database_index","db.sql.table","db.statement","db.system","db.user","deployment.environment","device.id","device.manufacturer","device.model.identifier","device.model.name","enduser.id","enduser.role","enduser.scope","event.domain","event.name","exception.escaped","exception.message","exception.stacktrace","exception.type","faas.coldstart","faas.cron","faas.document.collection","faas.document.name","faas.document.operation","faas.document.time","faas.execution","faas.id","faas.instance","faas.invoked_name","faas.invoked_provider","faas.invoked_region","faas.max_memory","faas.name","faas.time","faas.trigger","faas.version","feature_flag.key","feature_flag.provider_name","feature_flag.variant","graphql.document","graphql.operation.name","graphql.operation.type","http.client_ip","http.flavor","http.method","http.request_content_length","http.resend_count","http.response_content_length","http.route","http.scheme","http.status_code","http.target","http.url","http.user_agent","host.arch","host.id","host.image.id","host.image.name","host.image.version","host.name","host.type","k8s.cluster.name","k8s.container.name","k8s.container.restart_count","k8s.cronjob.name","k8s.cronjob.uid","k8s.daemonset.name","k8s.daemonset.uid","k8s.deployment.name","k8s.deployment.uid","k8s.job.name","k8s.job.uid","k8s.namespace.name","k8s.node.name","k8s.node.uid","k8s.pod.name","k8s.pod.uid","k8s.replicaset.name","k8s.replicaset.uid","k8s.statefulset.name","k8s.statefulset.uid","message.compressed_size","message.id","message.type","message.uncompressed_size","messaging.batch.message_count","messaging.consumer.id","messaging.destination.anonymous","messaging.destination.kind","messaging.destination.name","messaging.destination.template","messaging.destination.temporary","messaging.kafka.client_id","messaging.kafka.consumer.group","messaging.kafka.destination.partition","messaging.kafka.message.key","messaging.kafka.message.offset","messaging.kafka.message.tombstone","messaging.kafka.source.partition","messaging.message.conversation_id","messaging.message.id","messaging.message.payload_compressed_size_bytes","messaging.message.payload_size_bytes","messaging.operation","messaging.rabbitmq.destination.routing_key","messaging.rocketmq.client_group","messaging.rocketmq.client_id","messaging.rocketmq.consumption_model","messaging.rocketmq.message.delay_time_level","messaging.rocketmq.message.delivery_timestamp","messaging.rocketmq.message.group","messaging.rocketmq.message.keys","messaging.rocketmq.message.tag","messaging.rocketmq.message.type","messaging.rocketmq.namespace","messaging.source.anonymous","messaging.source.kind","messaging.source.name","messaging.source.template","messaging.source.temporary","messaging.system","net.app.protocol.name","net.app.protocol.version","net.host.carrier.icc","net.host.carrier.mcc","net.host.carrier.mnc","net.host.carrier.name","net.host.connection.subtype","net.host.connection.type","net.host.name","net.host.port","net.peer.name","net.peer.port","net.sock.family","net.sock.host.addr","net.sock.host.port","net.sock.peer.addr","net.sock.peer.name","net.sock.peer.port","net.transport","os.description","os.name","os.type","os.version","opentracing.ref_type","otel.library.name","otel.library.version","otel.scope.name","otel.scope.version","otel.status_code","otel.status_description","peer.service","process.command_args","process.command","process.command_line","process.executable.name","process.executable.path","process.owner","process.pid","process.parent_pid","process.runtime.description","process.runtime.name","process.runtime.version","rpc.grpc.status_code","rpc.jsonrpc.error_code","rpc.jsonrpc.error_message","rpc.jsonrpc.request_id","rpc.jsonrpc.version","rpc.method","rpc.service","rpc.system","service.instance.id","service.name","service.namespace","service.version","telemetry.auto.version","telemetry.sdk.language","telemetry.sdk.name","telemetry.sdk.version","thread.id","thread.name","webengine.description","webengine.name","webengine.version","aws.dynamodb.attribute_definitions","aws.dynamodb.attributes_to_get","aws.dynamodb.consistent_read","aws.dynamodb.consumed_capacity","aws.dynamodb.count","aws.dynamodb.exclusive_start_table","aws.dynamodb.global_secondary_index_updates","aws.dynamodb.global_secondary_indexes","aws.dynamodb.index_name","aws.dynamodb.item_collection_metrics","aws.dynamodb.limit","aws.dynamodb.local_secondary_indexes","aws.dynamodb.projection","aws.dynamodb.provisioned_read_capacity","aws.dynamodb.provisioned_write_capacity","aws.dynamodb.scan_forward","aws.dynamodb.scanned_count","aws.dynamodb.segment","aws.dynamodb.select","aws.dynamodb.table_count","aws.dynamodb.table_names","aws.dynamodb.total_segments","aws.ecs.cluster.arn","aws.ecs.container.arn","aws.ecs.launchtype","aws.ecs.task.arn","aws.ecs.task.family","aws.ecs.task.revision","aws.eks.cluster.arn","aws.log.group.arns","aws.log.group.names","aws.log.stream.arns","aws.log.stream.names","cloud.account.id","cloud.availability_zone","cloud.platform","cloud.provider","cloud.region","code.filepath","code.function","code.lineno","code.namespace","container.id","container.image.name","container.image.tag","container.name","container.runtime","db.cassandra.consistency_level","db.cassandra.coordinator.dc","db.cassandra.coordinator.id","db.cassandra.idempotence","db.cassandra.keyspace","db.cassandra.page_size","db.cassandra.speculative_execution_count","db.cassandra.table","db.connection_string","db.hbase.namespace","db.jdbc.driver_classname","db.mssql.instance_name","db.mongodb.collection","db.name","db.operation","db.redis.database_index","db.sql.table","db.statement","db.system","db.user","deployment.environment","device.id","device.model.identifier","device.model.name","enduser.id","enduser.role","enduser.scope","exception.escaped","exception.message","exception.stacktrace","exception.type","faas.coldstart","faas.cron","faas.document.collection","faas.document.name","faas.document.operation","faas.document.time","faas.execution","faas.id","faas.instance","faas.invoked_name","faas.invoked_provider","faas.invoked_region","faas.max_memory","faas.name","faas.time","faas.trigger","faas.version","http.client_ip","http.flavor","http.host","http.method","http.request_content_length","http.request_content_length_uncompressed","http.response_content_length","http.response_content_length_uncompressed","http.route","http.scheme","http.server_name","http.status_code","http.target","http.url","http.user_agent","host.arch","host.id","host.image.id","host.image.name","host.image.version","host.name","host.type","k8s.cluster.name","k8s.container.name","k8s.cronjob.name","k8s.cronjob.uid","k8s.daemonset.name","k8s.daemonset.uid","k8s.deployment.name","k8s.deployment.uid","k8s.job.name","k8s.job.uid","k8s.namespace.name","k8s.node.name","k8s.node.uid","k8s.pod.name","k8s.pod.uid","k8s.replicaset.name","k8s.replicaset.uid","k8s.statefulset.name","k8s.statefulset.uid","messaging.conversation_id","messaging.destination","messaging.destination_kind","messaging.kafka.client_id","messaging.kafka.consumer_group","messaging.kafka.message_key","messaging.kafka.partition","messaging.kafka.tombstone","messaging.message_id","messaging.message_payload_compressed_size_bytes","messaging.message_payload_size_bytes","messaging.operation","messaging.protocol","messaging.protocol_version","messaging.rabbitmq.routing_key","messaging.system","messaging.temp_destination","messaging.url","net.host.ip","net.host.name","net.host.port","net.peer.ip","net.peer.name","net.peer.port","net.transport","os.description","os.name","os.type","os.version","peer.service","process.command_args","process.command","process.command_line","process.executable.name","process.executable.path","process.owner","process.pid","process.runtime.description","process.runtime.name","process.runtime.version","rpc.grpc.status_code","rpc.jsonrpc.error_code","rpc.jsonrpc.error_message","rpc.jsonrpc.method","rpc.jsonrpc.request_id","rpc.jsonrpc.version","rpc.method","rpc.service","rpc.system","service.instance.id","service.name","service.namespace","service.version","telemetry.auto.version","telemetry.sdk.language","telemetry.sdk.name","telemetry.sdk.version","thread.id","thread.name","webengine.description","webengine.name","webengine.version"],"go.opentelemetry.io/otel/attribute.Type":[1,5,3,7,2,6,0,4,8],"go.opentelemetry.io/otel/codes.Code":[1,2,0],"go.opentelemetry.io/otel/sdk/trace.SamplingDecision":[0,2,1],"go.opentelemetry.io/otel/trace.SpanKind":[3,5,1,4,2,0],"go.opentelemetry.io/otel/trace.TraceFlags":[1],"golang.org/x/net/internal/socks.AuthMethod":[255,0,2],"golang.org/x/net/internal/socks.Command":[1],"golang.org/x/net/internal/socks.Reply":[0],"golang.org/x/sys/unix.ItimerWhich":[2,0,1],"golang.org/x/text/encoding/internal/identifier.MIB":[3,2005,2104,1020,2106,2026,2101,1016,2260,2108,2008,101,2065,2066,2067,2068,2074,2075,2076,2069,2070,2071,2072,2073,2077,2078,19,38,18,114,2025,113,2021,2017,2019,2020,2018,2004,2085,15,2060,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099,2100,2028,2029,2063,2102,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2086,2053,2054,2055,2056,2057,2058,2059,2061,2062,2064,2015,2016,29,75,96,76,27,35,77,118,21,78,79,80,83,86,41,87,88,89,90,42,91,92,94,97,98,22,43,23,44,45,104,105,39,40,37,73,24,46,47,30,49,50,51,20,52,53,54,48,55,56,57,25,58,99,28,93,26,59,60,61,62,63,109,110,111,112,81,82,84,85,95,64,65,66,67,68,69,70,71,72,74,4,5,6,7,12,13,9,8,10,11,14,16,2105,2084,2088,36,102,119,2027,10003,2023,2081,2080,33,34,31,32,116,117,115,2087,2009,2013,2011,2012,2014,2010,2103,10001,1011,17,2259,2107,1001,100,1015,1013,1014,1017,1018,1019,1012,1021,106,1000,1010,103,1002,1005,1008,1009,1006,1007,1004,1003,2079,10000,2083,2082,2007,2022,2006,2250,2251,2252,2253,2254,2255,2256,2257,2258,2000,2024,2001,2002,2003,2109,10002],"golang.org/x/text/encoding/unicode.BOMPolicy":[7,0,3],"golang.org/x/text/encoding/unicode.Endianness":[false,true],"gopkg.in/yaml.v3.Kind":[16,1,4,8,2],"gopkg.in/yaml.v3.Style":[2,32,16,8,4,1],"io/fs.FileMode":[511,438]}`)
}
